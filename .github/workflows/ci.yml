name: main
on:
  push:
    branches: [main]
  pull_request_target:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - '**.md'
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - .github/workflows/ci.yml

concurrency: ${{ github.workflow }}--${{ github.ref }}

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write
  workflows: write

env:
  KEYFILE_PASSPHRASE: '${{secrets.KEYFILE_PASSPHRASE}}'
  AWS_BUCKET: '${{secrets.AWS_BUCKET}}'
  AWS_ACCESS_KEY_ID: '${{secrets.AWS_ACCESS_KEY_ID}}'
  AWS_SECRET_ACCESS_KEY: '${{secrets.AWS_SECRET_ACCESS_KEY}}'
  AZURE_ACCOUNT_ID: '${{secrets.AZURE_ACCOUNT_ID}}'
  AZURE_ACCOUNT_KEY: '${{secrets.AZURE_ACCOUNT_KEY}}'
  AZURE_CONTAINER_NAME: '${{secrets.AZURE_CONTAINER_NAME}}'
  AWS_REGION: '${{secrets.AWS_REGION}}'
  NPM_TOKEN: '${{ secrets.NPM_TOKEN }}'

jobs:
  main:
    name: ${{matrix.node}}
    runs-on: ubuntu-latest
    strategy:
      # We do not want to run CRUD tests in parallel
      max-parallel: 1
      matrix:
        node:
          - lts/hydrogen
          - node

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Decrypt keyfile
        run: ./.github/scripts/decrypt_secret.sh
        env:
          KEYFILE_PASSPHRASE: ${{secrets.KEYFILE_PASSPHRASE}}
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
      - name: Install dependencies
        run: corepack yarn install
      - name: Build
        run: corepack yarn build
      - name: Run linters
        run: corepack yarn lint
      - name: Run tests
        run: corepack yarn test
        env:
          AWS_BUCKET: ${{secrets.AWS_BUCKET}}
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_REGION: ${{secrets.AWS_REGION}}
